#cloud-config
hostname: ${name}
package_update: true
package_upgrade: true
packages:
- "curl"
- "incus-agent"
- "openssh-server"
- "ssh-import-id"
- "apt-transport-https"
- "ca-certificates"
- "gpg"
- "containerd"
- "python3-kubernetes"
timezone: ${timezone}

users:
- name: ${standard_username}
  shell: "/bin/bash"
  ssh_authorized_keys:
    - ${standard_ssh_key}
    - ${automation_ssh_key}
  sudo: "ALL=(ALL) NOPASSWD:ALL"
- name: ${automation_username}
  shell: "/bin/bash"
  ssh_authorized_keys:
    - ${standard_ssh_key}
    - ${automation_ssh_key}
  sudo: "ALL=(ALL) NOPASSWD:ALL"
  uid: ${automation_uid}

swap:
  filename: /swap.img
  size: 0
  maxsize: 0

disk_setup:
  "/dev/sdb": {"layout": true, "overwrite": false, "table_type": "gpt"}

fs_setup:
- {"device": "/dev/sdb1", "filesystem": "ext4", "label": "k8s-data"}

mounts:
%{~ if node_type == "control" }
- ["/dev/sdb1", "/var/lib/etcd"]
%{~ else }
- ["/dev/sdb1", "/var/lib/kubelet"]
%{~ endif }

write_files:
- path: /etc/modules-load.d/k8s.conf
  content: |
    overlay
    br_netfilter

- path: /etc/sysctl.d/k8s.conf
  content: |
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    net.ipv6.conf.all.forwarding        = 1
    net.ipv6.conf.eth0.accept_ra        = 2

- path: /etc/containerd/config.toml
  content: |
    version = 2
    [plugins]
      [plugins."io.containerd.grpc.v1.cri"]
        [plugins."io.containerd.grpc.v1.cri".containerd]
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              runtime_type = "io.containerd.runc.v2"
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                SystemdCgroup = true

runcmd:
  - systemctl enable ssh.service
  - systemctl start ssh.service

  - modprobe overlay
  - modprobe br_netfilter
  - sysctl --system

  - mkdir -p /etc/containerd
  - systemctl restart containerd
  - systemctl enable containerd
  
  - mkdir -p /etc/apt/keyrings
  - curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  - echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
  - apt update
  
  - apt install -y kubelet kubeadm kubectl
  - apt-mark hold kubelet kubeadm kubectl
  - systemctl enable kubelet
  
  - mkdir -p /etc/default
  - echo 'KUBELET_EXTRA_ARGS="--node-ip=::"' > /etc/default/kubelet
