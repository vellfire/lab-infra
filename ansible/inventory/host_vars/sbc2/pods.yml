---
default_host_ip: ""

pods:
  - name: traefik
    image: public.ecr.aws/docker/library/traefik:3.4.0
    restart: unless-stopped
    state: healthy
    security_opt:
      - "no-new-privileges:true"
    networks:
      - name: proxy
    ports:
      - 80:80
      - 443:443
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    env:
      BUNNY_API_KEY: "{{ lookup('ripplefcl.bwscache.secret', 'bunny-api').value }}"
      BUNNY_POLLING_TIMEOUT: "600"
      BUNNY_POLLING_INTERVAL: "5"
      BUNNY_TTL: "3600"
      CF_API_EMAIL: "{{ lookup('ripplefcl.bwscache.secret', 'cf-api-email').value }}"
      CF_API_KEY: "{{ lookup('ripplefcl.bwscache.secret', 'cf-api-key').value }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "~/pods/traefik/config/traefik.yml:/traefik.yml:ro"
      - "~/pods/traefik/config/providers:/providers:ro"
      - "~/pods/traefik/config/acme.json:/acme.json"
    directory: true

  - name: pma_ams
    image: public.ecr.aws/docker/library/phpmyadmin:5.2.2
    restart: unless-stopped
    state: started
    networks:
      - name: proxy
    env:
      PMA_HOST: "{{ lookup('ripplefcl.bwscache.secret', 'pma_host_ams').value }}"
      PMA_USER: "pma"
      PMA_PASSWORD: "{{ lookup('ripplefcl.bwscache.secret', 'pma_pass').value }}"

  - name: pma_bnt
    image: public.ecr.aws/docker/library/phpmyadmin:5.2.2
    restart: unless-stopped
    state: started
    networks:
      - name: proxy
    env:
      PMA_HOST: "{{ lookup('ripplefcl.bwscache.secret', 'pma_host_bnt').value }}"
      PMA_USER: "pma"
      PMA_PASSWORD: "{{ lookup('ripplefcl.bwscache.secret', 'pma_pass').value }}"

  - name: it-tools
    image: ghcr.io/corentinth/it-tools:2024.10.22-7ca5933
    restart: unless-stopped
    state: started
    networks:
      - name: proxy

  - name: cyberchef
    image: ghcr.io/gchq/cyberchef:10.19.4
    restart: unless-stopped
    state: started
    networks:
      - name: proxy

  - name: scrutiny-db
    image: public.ecr.aws/docker/library/influxdb:2.7
    restart: unless-stopped
    state: started
    networks:
      - name: scrutiny
    volumes:
      - "/opt/pods/scrutiny-db/data:/var/lib/influxdb2"
    directory: true

  - name: scrutiny-web
    image: ghcr.io/analogj/scrutiny:v0.8.1-web
    restart: unless-stopped
    state: started
    networks:
      - name: scrutiny
      - name: proxy
    env:
      SCRUTINY_WEB_INFLUXDB_HOST: scrutiny-db
    volumes:
      - "/opt/pods/scrutiny-web/config:/opt/scrutiny/config"
    directory: true

  - name: scrutiny-collector
    image: ghcr.io/analogj/scrutiny:v0.8.1-collector
    restart: unless-stopped
    state: started
    networks:
      - name: scrutiny
    capabilities:
      - SYS_ADMIN
      - SYS_RAWIO
    env:
      COLLECTOR_API_ENDPOINT: "http://scrutiny-web:8080"
      COLLECTOR_HOST_ID: "{{ ansible_hostname }}"
      COLLECTOR_CRON_SCHEDULE: "0 * * * *"
      COLLECTOR_RUN_STARTUP: "true"
    volumes:
      - "/run/udev:/run/udev:ro"
    devices:
      - /dev/nvme0

  - name: media-db
    image: public.ecr.aws/docker/library/postgres:17.5
    restart: unless-stopped
    state: healthy
    networks:
      - name: media
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    env:
      POSTGRES_USER: "media"
      POSTGRES_PASSWORD: "{{ lookup('ripplefcl.bwscache.secret', 'media-db-password').value }}"
    volumes:
      - "/opt/pods/media-db/pgdata:/var/lib/postgresql/data"
    directory: true

  - name: plex
    image: ghcr.io/linuxserver/plex:1.41.7
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    ports:
      - 32400:32400
    env:
      PUID: "{{ ansible_facts.user_uid }}"
      PGID: "{{ ansible_facts.user_gid }}"
      TZ: "Europe/London"
      VERSION: "latest"
      # - PLEX_CLAIM=
    volumes:
      - "/opt/pods/plex/config:/config"
      - "/opt/pods/plex/transcode:/transcode"
      - "/opt/shares/pods/media:/media"
      - "/opt/shares/pods/plex:/backup"
    directory: true

  - name: overseerr
    image: ghcr.io/linuxserver/overseerr:develop
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    ports:
      - 5055:5055
    env:
      PUID: "{{ ansible_facts.user_uid }}"
      PGID: "{{ ansible_facts.user_gid }}"
      TZ: "Europe/London"
    volumes:
      - "/opt/pods/overseerr/config:/config"
    directory: true

  - name: sonarr
    image: ghcr.io/linuxserver/sonarr:4.0.14
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    env:
      PUID: "{{ ansible_facts.user_uid }}"
      PGID: "{{ ansible_facts.user_gid }}"
      TZ: "Europe/London"
    volumes:
      - "/opt/pods/sonarr/config:/config"
      - "/opt/shares/pods/media:/media"
      - "/opt/shares/pods/sonarr:/backup"
    directory: true

  - name: radarr
    image: ghcr.io/linuxserver/radarr:5.23.3
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    env:
      PUID: "{{ ansible_facts.user_uid }}"
      PGID: "{{ ansible_facts.user_gid }}"
      TZ: "Europe/London"
    volumes:
      - "/opt/pods/radarr/config:/config"
      - "/opt/shares/pods/media:/media"
      - "/opt/shares/pods/radarr:/backup"
    directory: true

  - name: sabnzbd
    image: ghcr.io/linuxserver/sabnzbd:4.5.1
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    env:
      PUID: "{{ ansible_facts.user_uid }}"
      PGID: "{{ ansible_facts.user_gid }}"
      TZ: "Europe/London"
    volumes:
      - "/opt/pods/sabnzbd/config:/config"
      - "/opt/shares/pods/media:/media"
      - "/opt/shares/pods/sabnzbd:/backup"
    directory: true

  - name: prowlarr
    image: ghcr.io/linuxserver/prowlarr:1.35.1
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    env:
      PUID: "{{ ansible_facts.user_uid }}"
      PGID: "{{ ansible_facts.user_gid }}"
      TZ: "Europe/London"
    volumes:
      - "/opt/pods/prowlarr/config:/config"
      - "/opt/shares/pods/prowlarr:/backup"
    directory: true

  - name: maintainerr
    image: ghcr.io/jorenn92/maintainerr:2.14.0
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    env:
      TZ: "Europe/London"
    volumes:
      - "/opt/pods/maintainerr/config:/opt/data"
    directory: true

  - name: tautulli
    image: ghcr.io/tautulli/tautulli:v2.15.2
    restart: unless-stopped
    state: started
    networks:
      - name: media
      - name: proxy
    env:
      PUID: "{{ ansible_facts.user_uid }}"
      PGID: "{{ ansible_facts.user_gid }}"
      TZ: "Europe/London"
    volumes:
      - "/opt/pods/tautulli/config:/config"
      - "/opt/shares/pods/tautulli/backup:/config/backups"
    directory: true

  - name: vaultwarden
    image: ghcr.io/dani-garcia/vaultwarden:1.33.2
    restart: unless-stopped
    state: started
    networks:
      - name: proxy
    env:
      DOMAIN: "{{ lookup('ripplefcl.bwscache.secret', 'vw-domain').value }}"
    volumes:
      - "/opt/pods/vaultwarden/data:/data"
    directory: true

  - name: xoa
    image: ronivay/xen-orchestra:5.177.0
    restart: unless-stopped
    state: started
    capabilities:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    security_opt:
      - "apparmor:unconfined"
    networks:
      - name: proxy
    volumes:
      - "/opt/pods/xoa/config:/var/lib/xo-server"
      - "/opt/pods/xoa/db:/var/lib/redis"
    directory: true

  - name: prometheus
    image: quay.io/prometheus/prometheus:v3.3.1
    container_name: prometheus
    restart: unless-stopped
    state: started
    user: root
    networks:
      - name: proxy
      - name: monitor
    volumes:
      - "/opt/pods/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "/opt/pods/prometheus/config/targets:/etc/prometheus/targets:ro"
      - "/opt/pods/prometheus/data:/prometheus"
    directory: true

  - name: mktxp
    image: ghcr.io/akpw/mktxp:1.2.10
    container_name: mktxp
    restart: unless-stopped
    state: started
    user: root
    networks:
      - name: monitor
    volumes:
      - "/opt/pods/mktxp/config:/root/mktxp"
    mktxp_user: "{{ lookup('ripplefcl.bwscache.secret', 'mktxp_user').value }}"
    mktxp_pass: "{{ lookup('ripplefcl.bwscache.secret', 'mktxp_pass').value }}"

  - name: grafana
    image: docker.io/grafana/grafana:11.6.2
    container_name: grafana
    restart: unless-stopped
    state: started
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    networks:
      - name: proxy
      - name: monitor
    env:
      GF_INSTALL_PLUGINS: grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel
    volumes:
      - "/opt/pods/grafana/data:/var/lib/grafana"
    directory: true

pod_networks:
  - name: proxy
    driver: local
  - name: scrutiny
    driver: local
  - name: media
    driver: local
  - name: monitor
    driver: local
